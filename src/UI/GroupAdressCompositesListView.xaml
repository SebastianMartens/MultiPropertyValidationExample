<UserControl x:Class="MultiPropertyValidationExample.UI.GroupAdressCompositesListView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:ui="clr-namespace:MultiPropertyValidationExample.UI"
             xmlns:converters="clr-namespace:MultiPropertyValidationExample.UI.Converters"
             mc:Ignorable="d" 
      d:DesignHeight="300" d:DesignWidth="300"
      d:DataContext="{d:DesignInstance Type=ui:GroupAdressCompositesListViewModel}"
	>
    
    <!--
    #############################
    MultiDataTrigger on "HasError" is possible for cross-property validation.
    (But not used here as in this example validation is part of the domain...
    ############################
    -->
    
    <StackPanel Orientation="Vertical">
    <DataGrid ItemsSource="{Binding GroupAdressCollectionView.View}" AutoGenerateColumns="False">
        <!--<DataGrid.Resources>
            <Style TargetType="{x:Type TextBox}">
                <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
                </Style.Triggers>
            </Style>
        </DataGrid.Resources>-->
       <DataGrid.RowHeaderStyle>
            <Style TargetType="{x:Type DataGridRowHeader}">
                <Setter Property="DataGridRowHeader.ToolTip" Value="{Binding Path=GlobalErrorsArray[0]}"/>                                                
            </Style>
        </DataGrid.RowHeaderStyle>
        <DataGrid.Columns>
            <DataGridTextColumn Header="Name" Binding="{Binding Name, Mode=TwoWay}"/>
                <DataGridTextColumn Header="Read GA" Binding="{Binding ReadAdress, Mode=TwoWay, Converter={converters:GroupAdressToStringConverter}}">
                <DataGridTextColumn.ElementStyle>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="DataGridCell.ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                    </Style>
                </DataGridTextColumn.ElementStyle>
            </DataGridTextColumn>
            <DataGridTextColumn Header="Write GA" Binding="{Binding WriteAdress, Mode=TwoWay, Converter={converters:GroupAdressToStringConverter}}">
                <DataGridTextColumn.ElementStyle>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="DataGridCell.ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                    </Style>
                </DataGridTextColumn.ElementStyle>
            </DataGridTextColumn>
        </DataGrid.Columns>
    </DataGrid>

        <StackPanel Orientation="Horizontal">
            <Button Content="Format: 0/0/0" Command="{Binding SetFormatSlashedCommand}" />
            <Button Content="Format: 0 0 0" Command="{Binding SetFormatSpacedCommand}"/>
            <TextBlock Text="{Binding CurrentGaStyle}"></TextBlock>
        </StackPanel>
        
    </StackPanel>

</UserControl>
